<div v-if='panelAddCategory != null' id='pnls-add' class='pnls-add'>
  <add-category v-if='panelAddCategory == "services"' :placeholder='"Название услуги"' :panel-add-category='panelAddCategory' v-on:cancel-panel="panelAddCategory = null"></add-category>
  <add-category v-else-if='panelAddCategory == "categories"' :placeholder='"Название категории"' :panel-add-category='panelAddCategory' v-on:cancel-panel="panelAddCategory = null"></add-category>
</div>

<script type="text/javascript">
  var vmPanelsAdd = new Vue({
    el: '#pnls-add',
    data: {
      panelAddCategory: null,
      categoryId: null,
      budget: '',
    },
    watch: {
      panelAddCategory() {
        if(this.panelAddCategory == 'services') {
          this.budget = 'income';
          this.categoryId = 1;
        }
        else {
          this.budget = '';
          this.categoryId = null;
        }

      },
    },
  });

  Vue.component('add-category', {
    data: function () {
      return {
        categories: [],
        nameCategory: '',
        newCategory: [],
        loadingCategory: false,
        colors: [],
        color: null,
      }
    },
    props: {
      placeholder: String,
      panelAddCategory: String,
    },
    methods: {
      createCategory() {
        let {nameCategory, categories, color} = this;
        let {categoryId, budget} = vmPanelsAdd;
        var complited = false;

        if(!this.loadingCategory) {
          this.loadingCategory = true;

          setTimeout(() => {
            $.ajax('/categories.json', {
              method: 'POST',
              data: {
                authenticity_token: authToken,
                category: {
                  name: nameCategory,
                  budget: budget,
                  level: categoryId,
                  color: color,
                }
              },
              success: messege => {
                complited = messege.complited;
                newCategory = messege.result;
                vmNotifications.notifications.unshift(messege);
              },
              error: e => console.warn('error', e)
            }).done(e => {
              if(complited) {
                this.nameCategory = '';
                this.color = null;

                if(vmPanelsAdd.panelAddCategory == "categories") {
                  vmPanelsAdd.budget = '';
                  vmPanelsAdd.categoryId = null;                  
                }

                categories.push(newCategory);
                vmClient.categories.push(newCategory);
                vmTransaction.categories.push(newCategory);
              }
              this.loadingCategory = false;
            });
          }, 600);
        }
      },
    },
    computed: {
      services() {
        var categories = this.categories.filter(c => c.budget == 'income');

        return {
          value: { name: 'Доход', id: 0, budget: 'income' },
          children: buildHierarchy(categories)
        }.children[0]
      },
      categoriesTreeIncome() {
        var categories = this.categories.filter(c => c.budget == 'income');

        return {
          value: { name: 'Доход', id: 0, budget: 'income' },
          children: buildHierarchy(categories)
        }
        // .children[0]
      },
      categoriesTreeExpense() {
        var categories = this.categories.filter(c => c.budget == 'expense');

        return {
          value: { name: 'Расход', id: 0, budget: 'expense' },
          children: buildHierarchy(categories)
        }
      }
    },
    created() {
      $.get('/get_categories.json', 
        categories => this.categories = categories);

      this.colors = ['#ad2257', '#f4511f', '#288043', '#f6bf26', '#3f51b5', '#3cb678', '#a79b8e', '#616161', '#e67b72']
    },
    template: `
      <div class="pnl-add1">
        <input v-model='nameCategory' type="text" class="whsOnd zHQkBf" autocomplete="off" tabindex="0" :placeholder="placeholder" autofocus="" data-initial-value="" badinput="false">

        <ul v-if='panelAddCategory == "services"' class="tree-categories-add">
          <item-category-add :category="services"></item-category-add>
        </ul>
        <ul v-else-if='panelAddCategory == "categories"' class="tree-categories-add">
          <item-category-add :category="categoriesTreeIncome"></item-category-add>
          <item-category-add :category="categoriesTreeExpense"></item-category-add>
        </ul>

        <div class='color-panel'>
          <div :class='[ color == colorItem ? "active " : "" ]' @click='color = colorItem' v-for='colorItem in colors' :style="'background-color: ' + colorItem" class='item-color-panel'></div>
        </div>

        <div class='btns-pnls-add'>
          <button @click='createCategory()' class='btn-pnls-add'>Добавить</button>
          <button @click="$emit('cancel-panel')" class='btn-pnls-cancel'>Отмена</button>
        </div>
      </div>
    `
  })

  // define the item component
  Vue.component('item-category-add', {
    template: '#item-category',
    props: {
      category: Object
    },
    data: function () {
      return {
        open: false,
      }
    },
    computed: {
      isFolder: function () {
        return this.category.children &&
          this.category.children.length
      },
      categoryId() {
        return vmPanelsAdd.categoryId;
      },
      budget() {
        return vmPanelsAdd.budget;
      },
    },
    methods: {
      toggle: function () {
        if (this.isFolder) {
          this.open = !this.open
        }
      },
      updateCategoryId(categoryId, budget) {
        vmPanelsAdd.categoryId = categoryId;
        vmPanelsAdd.budget = budget;
      },
    }
  })
</script>

<script type="text/x-template" id="item-category">
  <li class="item-tree-category" :class="[ open ? 'open' : '' ]">
    <div>
      <div class="item__btns" :style=" category.value.color ? 'color: ' + category.value.color : 'color: #212121;' ">
        <div v-if='categoryId == category.value.id && budget == category.value.budget' @click='updateCategoryId(null, "")' class='btn-delete'>
          <ion-icon name="radio-button-on"></ion-icon>
        </div>

        <div v-else @click='updateCategoryId(category.value.id, category.value.budget)' class='btn-delete'>
          <ion-icon name="radio-button-off"></ion-icon>
        </div>
      </div>

      <div :style=" category.value.color ? 'color: ' + category.value.color : 'color: #212121;' ">
        <div v-if='categoryId == category.value.id && budget == category.value.budget' @click='updateCategoryId(null, "")'>{{ category.value.name }}</div>
        <div v-else @click='updateCategoryId(category.value.id, category.value.budget)'>{{ category.value.name }}</div>
      </div>

      <div class="item__btns" style='margin-left: 5px;'>
        <div @click="toggle" v-if="isFolder" class='btn-delete btn-show'>
          <ion-icon name="arrow-dropdown"></ion-icon>
        </div>
      </div>
    </div>

    <ul v-show="open" v-if="isFolder" class='tree-categories-add' style='margin-left: 16px;'>
      <item-category-add v-for="category in category.children" :category="category" :key="category.value.id">
      </item-category-add>
    </ul>
  </li>
</script>