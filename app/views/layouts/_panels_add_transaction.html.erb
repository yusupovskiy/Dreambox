<%= render 'layouts/panels_add_tree_categories' %>

<script type="text/javascript">
  Vue.component('add-transaction', {
    data: function () {
      return {
        newElement: [],
        loading: false,
        note: '',
        amount: null,
        date: '',
        affiliate_id: '',
        selectSearch: '',
        showSelect: false,
        affiliateId: '',
      }
    },
    props: {
      panelAddCategory: String,
      arrTree: Array,
      affiliates: Array,
      clients: Array,
      people: Object,
      categoryId: Number,
    },
    methods: {
      currentDate() {
        let currentDate = new Date();

        this.date = setDate(currentDate.getDate(), currentDate.getMonth(), currentDate.getFullYear());

        console.log(this.date);
      },
      clickPeople(people) {
        this.selectSearch = '';
        this.showSelect = false;
        vmPanelsAdd.people = people;
      },
      closeSelect() {
        this.selectSearch = '';
        this.showSelect = false;
      },
      deletePeople() {
        vmPanelsAdd.people = {};
      },

      createTransaction() {
        let {people} = vmPanelsAdd;
        let {amount, note, categoryId, date, affiliateId, newElement} = this;
        var complited = false;

        if(!this.loading) {
          this.loading = true;

          // if(addTransForSubs == 'income') {
          //   budget = 'income';
          //   addTransForSubs = client.operation_id;
          // }
          // else if(addTransForSubs == 'expense') {
          //   budget = 'expense';
          //   addTransForSubs = client.operation_id;
          // }

          setTimeout(() => {
            $.ajax('/create_transaction.json', {
              method: 'POST',
              data: {
                authenticity_token: authToken,
                operation_id: people.operation_id,
                amount: amount,
                note: note,
                category_id: categoryId,
                affiliate_id: affiliateId,
                date: date,
              },
              success: messege => {
                complited = messege.complited;
                newElement = messege.result[0];
                vmNotifications.notifications.unshift(messege);
              },
              error: e => console.warn('error', e)
            }).done(e => {
              if(complited) {
                vmPanelsAdd.categoryId = null;
                this.affiliateId = '';

                if(typeof vmClient !== 'undefined') {
                  vmClient.transactions.unshift(newElement);                  
                }
                else if(typeof vmTransaction !== 'undefined') {
                  vmTransaction.transactions.unshift(newElement);                  
                }
                else if(typeof vmWorkers !== 'undefined') {
                  vmWorkers.transactions.unshift(newElement);                  
                }

                vmPanelsAdd.panelAddCategory = null;
              }
              this.loading = false;
            });
          }, 600);
        }
      },
    },
    computed: {
      isCurrentDate() {
        let newCurrentDate = new Date();
        let currentDate = setDate(newCurrentDate.getDate(), newCurrentDate.getMonth(), newCurrentDate.getFullYear());

        return this.date === currentDate;
      },
      clientsSearch() {
        const s = validSpaces(this.selectSearch.toLowerCase());
        return this.clients.filter(n => {
          let full_name = n.first_name + ' ' + n.last_name + ' ' + n.patronymic;

          return Object.values(full_name.split()).some(m => m.toString().toLowerCase().includes(s));
          }
        );
      },
    },
    created() {
      this.colors = ['#ad2257', '#f4511f', '#288043', '#f6bf26', '#3f51b5', '#3cb678', '#a79b8e', '#616161', '#e67b72']
    },
    template: `
      <div class="pnl-add1">
        <input v-model='amount' type="text" class="whsOnd zHQkBf" autocomplete="off" tabindex="0" placeholder="Сумма" autofocus="" data-initial-value="" badinput="false" />

        <div v-if="!isCurrentDate" class="dop">
          <span @click="currentDate()" class="item-dop">Сегодня</span>
        </div>

        <tree :arr-tree="arrTree"></tree>

        <div class="add-input">

          <div class="item-add-input">
            <div class="left-item-add-input">Сторона</div>
            <div class="right-item-add-input">

              <input v-model="selectSearch" type="text" class="input-right-item-add-input" style="position: relative; z-index: 99; background-color: transparent;"  @focus="showSelect = true" :class="[{ active: showSelect }]" />

              <div v-if="showSelect || selectSearch.length > 0" @click="closeSelect" class="close-select"><ion-icon name="close-circle"></ion-icon></ion-icon></div>

              <div v-else-if="people.id !== undefined" @click="deletePeople" class="close-select"><ion-icon name="close-circle"></ion-icon></ion-icon></div>

              <div v-if="people.id !== undefined" class="item-v" :title="people.patronymic">
                <img src="/resources/no-image-available.png">
                <div>{{ people.last_name }} {{ people.first_name }}</div>
              </div>
              <div v-else-if="selectSearch.length <= 0 && people.id === undefined" class="emptily">Пусто</div>

              <div v-if="showSelect" class="select-list cool-scrollbar">
                <div class="scroll-select-list">
                  <div v-if="clientsSearch.length > 0">
                    <div @click="clickPeople(client)" v-for="client in clientsSearch" :title="client.patronymic + ' ' + client.phone_number" class="item-s">
                      <img src="/resources/no-image-available.png">
                      <div>{{ client.first_name }} {{ client.last_name }}</div>
                    </div>
                  </div>
                  <div v-else style="font-size: 14px; padding: 2px 10px; color: #c2c2c2; user-select: none;">Ничего не найдено</div>
                </div>
              </div>

            </div>
          </div>

          <div class="item-add-input">
            <div class="left-item-add-input">Дата транзакции</div>
            <div class="right-item-add-input">
              <input placeholder="Пусто" type="date" class="input-right-item-add-input" v-model='date' />
            </div>
          </div>

          <div class="item-add-input">
            <div class="left-item-add-input">Филиал</div>
            <div class="right-item-add-input">
              <select v-model="affiliateId" class="input-right-item-add-input">
                <option disabled value="">Пусто</option>
                <option v-for="affiliate in affiliates" :value="affiliate.id">
                  {{ affiliate.address }}
                </option>
              </select>
            </div>
          </div>
          <div class="item-add-input">
            <div class="left-item-add-input">Комментарий</div>
            <div class="right-item-add-input">
              <textarea placeholder="Пусто" class="input-right-item-add-input" v-model='note'></textarea>
            </div>
          </div>
        </div>

        <div class='btns-pnls-add'>
          <button @click='createTransaction()' class='btn-pnls-add'>Добавить</button>
          <button @click="$emit('cancel-panel')" class='btn-pnls-cancel'>Отмена</button>
        </div>
      </div>
    `
  });
</script>
