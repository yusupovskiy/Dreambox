<div id="clients">
  <div class="panel-list">

    <%= render 'clients/index_search' %>

    <%= render 'clients/index_list' %>

  </div>

  <div class="panels-content hide-scrollbar">
    <input type="hidden" id="authenticity_token" value="<%=form_authenticity_token%>">
    <%= render 'clients/home' %>
    <%= render 'clients/client' %>
    <%= render 'clients/record' %>
  </div>
</div>

<%= render 'clients/client_records_vue' %>
<%= render 'clients/home_records' %>
<%= render 'clients/client_panel_info' %>
<%= render 'clients/client_panel_info_add_sub' %>
<%= render 'clients/client_panel_info_add_transaction' %>
<%= render 'clients/client_records' %>
<%= render 'clients/client/client_transactions' %>

<script type="text/javascript">
  var authToken = document.getElementById("authenticity_token").value;
  var valueInput = document.getElementById("search").value
  var lastId = null;

  var vmClient = new Vue ({
    el: '#clients',
    data: {
      clientsCompany: [],
      recordsCompany: [],
      titleInput: "Поиск клиентов", // будет подставляться название группы
      searchClients: [],
      loadComplete: false,
      searchValue: valueInput,


      client: [],
      selectRecordsClient: [],
      recordsClient: [],
      clientTransactions: [],

      countItemsList: 0,
      panelShow: 'home',

      typeClient: '',

      clients: []
    },
    methods: {
      clickClient(client) {
        this.client = client;
        this.activeElement('client-', client.id, 'list');
        this.panelShow = 'client';

        url = window.location.href;
        newUrl = updateURLParameter(url, 'client', client.id);
        history.pushState('', 'Клиент', newUrl);

        $.get(
          '/get_select_records_client.json', 
          { client_id: client.id },
          selectRecordsClient => this.selectRecordsClient = selectRecordsClient
        );
        $.get(
          '/get_records_client.json', 
          { client_id: client.id },
          recordsClient => this.recordsClient = recordsClient
        );
        $.get(
          '/get_client_transactions.json', 
          { client_id: client.id },
          clientTransactions => this.clientTransactions = clientTransactions
        );

      },

      sendQuery(type, value) {
        url = window.location.href;
        newUrl = updateURLParameter(url, type, value);

        this.clientsQuery(newUrl);
      },
      clientsQuery(url) {

        urlHash = new URL(url);
        clientQuery = urlHash.searchParams.get("search");
        typeOfClients = urlHash.searchParams.get("clients");

        arrayClientQuery = validSpaces(clientQuery).split(' ');

        clearTimeout(lastId)
        this.loadComplete = false;

        if(typeOfClients == null) {
          typeOfClients = 'current'
          url = updateURLParameter(url, 'clients', typeOfClients);
        }
        this.activeElement(typeOfClients, '', 'indecators');

        lastId = setTimeout(() => {
          $.get(
            '/get_clients.json', 
            {
              typeOfClients: typeOfClients,
              lastNameClients: arrayClientQuery[0],
              firstNameClients: arrayClientQuery[1],
              patronymicClients: arrayClientQuery[2]
            // ,
            // record: 29
            },
            searchClients => {
              this.searchClients = searchClients;
              this.loadComplete = true;
              history.pushState('', clientQuery, url);
            }
          )
        }, 600);
      },
      activeElement(nameClass, id, parent) {
        setTimeout(() => {
          $('.' + nameClass + id).parents('.' + parent).children().removeClass('active');
          $('.' + nameClass + id).addClass('active');
        }, 0.1);
      }
    },
    created() {
      this.sendQuery('search', valueInput);

      $.ajax({
        url: '/get_clients.json',
        success: clientsCompany => {
          this.clientsCompany = clientsCompany;

          urlHash = new URL(window.location.href);
          id = urlHash.searchParams.get("client");
          if(id != null) {
            let indexCurrentClient = clientsCompany
              .findIndex(client => client.id == id);
            getClient = this.clientsCompany[indexCurrentClient];

            this.clickClient(getClient);
          }
        }
      });

      $.get(
        '/get_clients1.json',
        clients => this.clients = clients
      );

      $.get(
        '/get_records.json',
        recordsCompany => this.recordsCompany = recordsCompany
      );
    },
    watch: {
      "searchClients" : function() {
        this.countItemsList = this.searchClients.length;

        urlHash = new URL(window.location.href);
        id = urlHash.searchParams.get("client");
        this.activeElement('client-', id, 'list');
      },
      "typeClient" : function() {
        this.sendQuery('clients', this.typeClient);
      },
    }
  });
</script>
